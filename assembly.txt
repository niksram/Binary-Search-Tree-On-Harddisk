
a.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000000810 <_init>:
 810:	48 83 ec 08          	sub    $0x8,%rsp
 814:	48 8b 05 cd 17 20 00 	mov    0x2017cd(%rip),%rax        # 201fe8 <__gmon_start__>
 81b:	48 85 c0             	test   %rax,%rax
 81e:	74 02                	je     822 <_init+0x12>
 820:	ff d0                	callq  *%rax
 822:	48 83 c4 08          	add    $0x8,%rsp
 826:	c3                   	retq   

Disassembly of section .plt:

0000000000000830 <.plt>:
 830:	ff 35 22 17 20 00    	pushq  0x201722(%rip)        # 201f58 <_GLOBAL_OFFSET_TABLE_+0x8>
 836:	ff 25 24 17 20 00    	jmpq   *0x201724(%rip)        # 201f60 <_GLOBAL_OFFSET_TABLE_+0x10>
 83c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000840 <free@plt>:
 840:	ff 25 22 17 20 00    	jmpq   *0x201722(%rip)        # 201f68 <free@GLIBC_2.2.5>
 846:	68 00 00 00 00       	pushq  $0x0
 84b:	e9 e0 ff ff ff       	jmpq   830 <.plt>

0000000000000850 <putchar@plt>:
 850:	ff 25 1a 17 20 00    	jmpq   *0x20171a(%rip)        # 201f70 <putchar@GLIBC_2.2.5>
 856:	68 01 00 00 00       	pushq  $0x1
 85b:	e9 d0 ff ff ff       	jmpq   830 <.plt>

0000000000000860 <puts@plt>:
 860:	ff 25 12 17 20 00    	jmpq   *0x201712(%rip)        # 201f78 <puts@GLIBC_2.2.5>
 866:	68 02 00 00 00       	pushq  $0x2
 86b:	e9 c0 ff ff ff       	jmpq   830 <.plt>

0000000000000870 <fread@plt>:
 870:	ff 25 0a 17 20 00    	jmpq   *0x20170a(%rip)        # 201f80 <fread@GLIBC_2.2.5>
 876:	68 03 00 00 00       	pushq  $0x3
 87b:	e9 b0 ff ff ff       	jmpq   830 <.plt>

0000000000000880 <fclose@plt>:
 880:	ff 25 02 17 20 00    	jmpq   *0x201702(%rip)        # 201f88 <fclose@GLIBC_2.2.5>
 886:	68 04 00 00 00       	pushq  $0x4
 88b:	e9 a0 ff ff ff       	jmpq   830 <.plt>

0000000000000890 <__stack_chk_fail@plt>:
 890:	ff 25 fa 16 20 00    	jmpq   *0x2016fa(%rip)        # 201f90 <__stack_chk_fail@GLIBC_2.4>
 896:	68 05 00 00 00       	pushq  $0x5
 89b:	e9 90 ff ff ff       	jmpq   830 <.plt>

00000000000008a0 <printf@plt>:
 8a0:	ff 25 f2 16 20 00    	jmpq   *0x2016f2(%rip)        # 201f98 <printf@GLIBC_2.2.5>
 8a6:	68 06 00 00 00       	pushq  $0x6
 8ab:	e9 80 ff ff ff       	jmpq   830 <.plt>

00000000000008b0 <ftell@plt>:
 8b0:	ff 25 ea 16 20 00    	jmpq   *0x2016ea(%rip)        # 201fa0 <ftell@GLIBC_2.2.5>
 8b6:	68 07 00 00 00       	pushq  $0x7
 8bb:	e9 70 ff ff ff       	jmpq   830 <.plt>

00000000000008c0 <feof@plt>:
 8c0:	ff 25 e2 16 20 00    	jmpq   *0x2016e2(%rip)        # 201fa8 <feof@GLIBC_2.2.5>
 8c6:	68 08 00 00 00       	pushq  $0x8
 8cb:	e9 60 ff ff ff       	jmpq   830 <.plt>

00000000000008d0 <malloc@plt>:
 8d0:	ff 25 da 16 20 00    	jmpq   *0x2016da(%rip)        # 201fb0 <malloc@GLIBC_2.2.5>
 8d6:	68 09 00 00 00       	pushq  $0x9
 8db:	e9 50 ff ff ff       	jmpq   830 <.plt>

00000000000008e0 <fseek@plt>:
 8e0:	ff 25 d2 16 20 00    	jmpq   *0x2016d2(%rip)        # 201fb8 <fseek@GLIBC_2.2.5>
 8e6:	68 0a 00 00 00       	pushq  $0xa
 8eb:	e9 40 ff ff ff       	jmpq   830 <.plt>

00000000000008f0 <fopen@plt>:
 8f0:	ff 25 ca 16 20 00    	jmpq   *0x2016ca(%rip)        # 201fc0 <fopen@GLIBC_2.2.5>
 8f6:	68 0b 00 00 00       	pushq  $0xb
 8fb:	e9 30 ff ff ff       	jmpq   830 <.plt>

0000000000000900 <__isoc99_scanf@plt>:
 900:	ff 25 c2 16 20 00    	jmpq   *0x2016c2(%rip)        # 201fc8 <__isoc99_scanf@GLIBC_2.7>
 906:	68 0c 00 00 00       	pushq  $0xc
 90b:	e9 20 ff ff ff       	jmpq   830 <.plt>

0000000000000910 <fwrite@plt>:
 910:	ff 25 ba 16 20 00    	jmpq   *0x2016ba(%rip)        # 201fd0 <fwrite@GLIBC_2.2.5>
 916:	68 0d 00 00 00       	pushq  $0xd
 91b:	e9 10 ff ff ff       	jmpq   830 <.plt>

Disassembly of section .plt.got:

0000000000000920 <__cxa_finalize@plt>:
 920:	ff 25 d2 16 20 00    	jmpq   *0x2016d2(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 926:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000930 <_start>:
     930:	31 ed                	xor    %ebp,%ebp
     932:	49 89 d1             	mov    %rdx,%r9
     935:	5e                   	pop    %rsi
     936:	48 89 e2             	mov    %rsp,%rdx
     939:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
     93d:	50                   	push   %rax
     93e:	54                   	push   %rsp
     93f:	4c 8d 05 0a 0e 00 00 	lea    0xe0a(%rip),%r8        # 1750 <__libc_csu_fini>
     946:	48 8d 0d 93 0d 00 00 	lea    0xd93(%rip),%rcx        # 16e0 <__libc_csu_init>
     94d:	48 8d 3d 05 0b 00 00 	lea    0xb05(%rip),%rdi        # 1459 <main>
     954:	ff 15 86 16 20 00    	callq  *0x201686(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
     95a:	f4                   	hlt    
     95b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000960 <deregister_tm_clones>:
     960:	48 8d 3d a9 16 20 00 	lea    0x2016a9(%rip),%rdi        # 202010 <__TMC_END__>
     967:	55                   	push   %rbp
     968:	48 8d 05 a1 16 20 00 	lea    0x2016a1(%rip),%rax        # 202010 <__TMC_END__>
     96f:	48 39 f8             	cmp    %rdi,%rax
     972:	48 89 e5             	mov    %rsp,%rbp
     975:	74 19                	je     990 <deregister_tm_clones+0x30>
     977:	48 8b 05 5a 16 20 00 	mov    0x20165a(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
     97e:	48 85 c0             	test   %rax,%rax
     981:	74 0d                	je     990 <deregister_tm_clones+0x30>
     983:	5d                   	pop    %rbp
     984:	ff e0                	jmpq   *%rax
     986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     98d:	00 00 00 
     990:	5d                   	pop    %rbp
     991:	c3                   	retq   
     992:	0f 1f 40 00          	nopl   0x0(%rax)
     996:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     99d:	00 00 00 

00000000000009a0 <register_tm_clones>:
     9a0:	48 8d 3d 69 16 20 00 	lea    0x201669(%rip),%rdi        # 202010 <__TMC_END__>
     9a7:	48 8d 35 62 16 20 00 	lea    0x201662(%rip),%rsi        # 202010 <__TMC_END__>
     9ae:	55                   	push   %rbp
     9af:	48 29 fe             	sub    %rdi,%rsi
     9b2:	48 89 e5             	mov    %rsp,%rbp
     9b5:	48 c1 fe 03          	sar    $0x3,%rsi
     9b9:	48 89 f0             	mov    %rsi,%rax
     9bc:	48 c1 e8 3f          	shr    $0x3f,%rax
     9c0:	48 01 c6             	add    %rax,%rsi
     9c3:	48 d1 fe             	sar    %rsi
     9c6:	74 18                	je     9e0 <register_tm_clones+0x40>
     9c8:	48 8b 05 21 16 20 00 	mov    0x201621(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
     9cf:	48 85 c0             	test   %rax,%rax
     9d2:	74 0c                	je     9e0 <register_tm_clones+0x40>
     9d4:	5d                   	pop    %rbp
     9d5:	ff e0                	jmpq   *%rax
     9d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     9de:	00 00 
     9e0:	5d                   	pop    %rbp
     9e1:	c3                   	retq   
     9e2:	0f 1f 40 00          	nopl   0x0(%rax)
     9e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     9ed:	00 00 00 

00000000000009f0 <__do_global_dtors_aux>:
     9f0:	80 3d 19 16 20 00 00 	cmpb   $0x0,0x201619(%rip)        # 202010 <__TMC_END__>
     9f7:	75 2f                	jne    a28 <__do_global_dtors_aux+0x38>
     9f9:	48 83 3d f7 15 20 00 	cmpq   $0x0,0x2015f7(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
     a00:	00 
     a01:	55                   	push   %rbp
     a02:	48 89 e5             	mov    %rsp,%rbp
     a05:	74 0c                	je     a13 <__do_global_dtors_aux+0x23>
     a07:	48 8b 3d fa 15 20 00 	mov    0x2015fa(%rip),%rdi        # 202008 <__dso_handle>
     a0e:	e8 0d ff ff ff       	callq  920 <__cxa_finalize@plt>
     a13:	e8 48 ff ff ff       	callq  960 <deregister_tm_clones>
     a18:	c6 05 f1 15 20 00 01 	movb   $0x1,0x2015f1(%rip)        # 202010 <__TMC_END__>
     a1f:	5d                   	pop    %rbp
     a20:	c3                   	retq   
     a21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     a28:	f3 c3                	repz retq 
     a2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000a30 <frame_dummy>:
     a30:	55                   	push   %rbp
     a31:	48 89 e5             	mov    %rsp,%rbp
     a34:	5d                   	pop    %rbp
     a35:	e9 66 ff ff ff       	jmpq   9a0 <register_tm_clones>

0000000000000a3a <write_node>:
     a3a:	55                   	push   %rbp
     a3b:	48 89 e5             	mov    %rsp,%rbp
     a3e:	48 83 ec 20          	sub    $0x20,%rsp
     a42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
     a46:	89 d0                	mov    %edx,%eax
     a48:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
     a4b:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
     a4f:	89 45 f0             	mov    %eax,-0x10(%rbp)
     a52:	8b 45 e4             	mov    -0x1c(%rbp),%eax
     a55:	48 63 d0             	movslq %eax,%rdx
     a58:	48 89 d0             	mov    %rdx,%rax
     a5b:	48 01 c0             	add    %rax,%rax
     a5e:	48 01 d0             	add    %rdx,%rax
     a61:	48 c1 e0 02          	shl    $0x2,%rax
     a65:	48 83 c0 08          	add    $0x8,%rax
     a69:	48 89 c1             	mov    %rax,%rcx
     a6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     a70:	ba 00 00 00 00       	mov    $0x0,%edx
     a75:	48 89 ce             	mov    %rcx,%rsi
     a78:	48 89 c7             	mov    %rax,%rdi
     a7b:	e8 60 fe ff ff       	callq  8e0 <fseek@plt>
     a80:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
     a84:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
     a88:	48 89 d1             	mov    %rdx,%rcx
     a8b:	ba 01 00 00 00       	mov    $0x1,%edx
     a90:	be 0c 00 00 00       	mov    $0xc,%esi
     a95:	48 89 c7             	mov    %rax,%rdi
     a98:	e8 73 fe ff ff       	callq  910 <fwrite@plt>
     a9d:	90                   	nop
     a9e:	c9                   	leaveq 
     a9f:	c3                   	retq   

0000000000000aa0 <free_node>:
     aa0:	55                   	push   %rbp
     aa1:	48 89 e5             	mov    %rsp,%rbp
     aa4:	48 83 ec 30          	sub    $0x30,%rsp
     aa8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     aac:	89 75 d4             	mov    %esi,-0x2c(%rbp)
     aaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     ab3:	48 89 c7             	mov    %rax,%rdi
     ab6:	e8 aa 01 00 00       	callq  c65 <read_tree>
     abb:	48 89 45 ec          	mov    %rax,-0x14(%rbp)
     abf:	8b 55 d4             	mov    -0x2c(%rbp),%edx
     ac2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     ac6:	89 d6                	mov    %edx,%esi
     ac8:	48 89 c7             	mov    %rax,%rdi
     acb:	e8 fd 01 00 00       	callq  ccd <read_node>
     ad0:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
     ad4:	8b 45 fc             	mov    -0x4(%rbp),%eax
     ad7:	83 e0 00             	and    $0x0,%eax
     ada:	09 d0                	or     %edx,%eax
     adc:	89 45 fc             	mov    %eax,-0x4(%rbp)
     adf:	8b 45 ec             	mov    -0x14(%rbp),%eax
     ae2:	89 45 f8             	mov    %eax,-0x8(%rbp)
     ae5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
     ae8:	89 45 ec             	mov    %eax,-0x14(%rbp)
     aeb:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
     aee:	48 8b 75 f4          	mov    -0xc(%rbp),%rsi
     af2:	8b 55 fc             	mov    -0x4(%rbp),%edx
     af5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     af9:	48 89 c7             	mov    %rax,%rdi
     afc:	e8 39 ff ff ff       	callq  a3a <write_node>
     b01:	48 8b 55 ec          	mov    -0x14(%rbp),%rdx
     b05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     b09:	48 89 d6             	mov    %rdx,%rsi
     b0c:	48 89 c7             	mov    %rax,%rdi
     b0f:	e8 03 00 00 00       	callq  b17 <write_tree>
     b14:	90                   	nop
     b15:	c9                   	leaveq 
     b16:	c3                   	retq   

0000000000000b17 <write_tree>:
     b17:	55                   	push   %rbp
     b18:	48 89 e5             	mov    %rsp,%rbp
     b1b:	48 83 ec 10          	sub    $0x10,%rsp
     b1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
     b23:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
     b27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     b2b:	ba 00 00 00 00       	mov    $0x0,%edx
     b30:	be 00 00 00 00       	mov    $0x0,%esi
     b35:	48 89 c7             	mov    %rax,%rdi
     b38:	e8 a3 fd ff ff       	callq  8e0 <fseek@plt>
     b3d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
     b41:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
     b45:	48 89 d1             	mov    %rdx,%rcx
     b48:	ba 01 00 00 00       	mov    $0x1,%edx
     b4d:	be 08 00 00 00       	mov    $0x8,%esi
     b52:	48 89 c7             	mov    %rax,%rdi
     b55:	e8 b6 fd ff ff       	callq  910 <fwrite@plt>
     b5a:	90                   	nop
     b5b:	c9                   	leaveq 
     b5c:	c3                   	retq   

0000000000000b5d <insert_at_free>:
     b5d:	55                   	push   %rbp
     b5e:	48 89 e5             	mov    %rsp,%rbp
     b61:	48 83 ec 30          	sub    $0x30,%rsp
     b65:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
     b69:	89 d0                	mov    %edx,%eax
     b6b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
     b6f:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
     b73:	89 45 e0             	mov    %eax,-0x20(%rbp)
     b76:	8b 45 d0             	mov    -0x30(%rbp),%eax
     b79:	85 c0                	test   %eax,%eax
     b7b:	78 5a                	js     bd7 <insert_at_free+0x7a>
     b7d:	8b 45 d0             	mov    -0x30(%rbp),%eax
     b80:	89 45 f0             	mov    %eax,-0x10(%rbp)
     b83:	8b 55 d0             	mov    -0x30(%rbp),%edx
     b86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     b8a:	89 d6                	mov    %edx,%esi
     b8c:	48 89 c7             	mov    %rax,%rdi
     b8f:	e8 39 01 00 00       	callq  ccd <read_node>
     b94:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
     b98:	8b 45 fc             	mov    -0x4(%rbp),%eax
     b9b:	83 e0 00             	and    $0x0,%eax
     b9e:	09 d0                	or     %edx,%eax
     ba0:	89 45 fc             	mov    %eax,-0x4(%rbp)
     ba3:	8b 4d d0             	mov    -0x30(%rbp),%ecx
     ba6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
     baa:	8b 55 e0             	mov    -0x20(%rbp),%edx
     bad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     bb1:	48 89 c7             	mov    %rax,%rdi
     bb4:	e8 81 fe ff ff       	callq  a3a <write_node>
     bb9:	8b 45 f8             	mov    -0x8(%rbp),%eax
     bbc:	89 45 d0             	mov    %eax,-0x30(%rbp)
     bbf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
     bc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     bc7:	48 89 d6             	mov    %rdx,%rsi
     bca:	48 89 c7             	mov    %rax,%rdi
     bcd:	e8 45 ff ff ff       	callq  b17 <write_tree>
     bd2:	8b 45 f0             	mov    -0x10(%rbp),%eax
     bd5:	eb 57                	jmp    c2e <insert_at_free+0xd1>
     bd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     bdb:	ba 02 00 00 00       	mov    $0x2,%edx
     be0:	be 00 00 00 00       	mov    $0x0,%esi
     be5:	48 89 c7             	mov    %rax,%rdi
     be8:	e8 f3 fc ff ff       	callq  8e0 <fseek@plt>
     bed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     bf1:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
     bf5:	48 89 d1             	mov    %rdx,%rcx
     bf8:	ba 01 00 00 00       	mov    $0x1,%edx
     bfd:	be 0c 00 00 00       	mov    $0xc,%esi
     c02:	48 89 c7             	mov    %rax,%rdi
     c05:	e8 06 fd ff ff       	callq  910 <fwrite@plt>
     c0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     c0e:	48 89 c7             	mov    %rax,%rdi
     c11:	e8 9a fc ff ff       	callq  8b0 <ftell@plt>
     c16:	48 83 e8 14          	sub    $0x14,%rax
     c1a:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
     c21:	aa aa aa 
     c24:	48 f7 e2             	mul    %rdx
     c27:	48 89 d0             	mov    %rdx,%rax
     c2a:	48 c1 e8 03          	shr    $0x3,%rax
     c2e:	c9                   	leaveq 
     c2f:	c3                   	retq   

0000000000000c30 <create_node>:
     c30:	55                   	push   %rbp
     c31:	48 89 e5             	mov    %rsp,%rbp
     c34:	89 7d dc             	mov    %edi,-0x24(%rbp)
     c37:	8b 45 dc             	mov    -0x24(%rbp),%eax
     c3a:	89 45 e8             	mov    %eax,-0x18(%rbp)
     c3d:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%rbp)
     c44:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%rbp)
     c4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     c4f:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
     c53:	8b 45 f0             	mov    -0x10(%rbp),%eax
     c56:	89 45 fc             	mov    %eax,-0x4(%rbp)
     c59:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
     c5d:	8b 4d fc             	mov    -0x4(%rbp),%ecx
     c60:	48 89 ca             	mov    %rcx,%rdx
     c63:	5d                   	pop    %rbp
     c64:	c3                   	retq   

0000000000000c65 <read_tree>:
     c65:	55                   	push   %rbp
     c66:	48 89 e5             	mov    %rsp,%rbp
     c69:	48 83 ec 20          	sub    $0x20,%rsp
     c6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
     c71:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     c78:	00 00 
     c7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     c7e:	31 c0                	xor    %eax,%eax
     c80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     c84:	ba 00 00 00 00       	mov    $0x0,%edx
     c89:	be 00 00 00 00       	mov    $0x0,%esi
     c8e:	48 89 c7             	mov    %rax,%rdi
     c91:	e8 4a fc ff ff       	callq  8e0 <fseek@plt>
     c96:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     c9a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
     c9e:	48 89 d1             	mov    %rdx,%rcx
     ca1:	ba 01 00 00 00       	mov    $0x1,%edx
     ca6:	be 08 00 00 00       	mov    $0x8,%esi
     cab:	48 89 c7             	mov    %rax,%rdi
     cae:	e8 bd fb ff ff       	callq  870 <fread@plt>
     cb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     cb7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
     cbb:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
     cc2:	00 00 
     cc4:	74 05                	je     ccb <read_tree+0x66>
     cc6:	e8 c5 fb ff ff       	callq  890 <__stack_chk_fail@plt>
     ccb:	c9                   	leaveq 
     ccc:	c3                   	retq   

0000000000000ccd <read_node>:
     ccd:	55                   	push   %rbp
     cce:	48 89 e5             	mov    %rsp,%rbp
     cd1:	48 83 ec 40          	sub    $0x40,%rsp
     cd5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     cd9:	89 75 d4             	mov    %esi,-0x2c(%rbp)
     cdc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     ce3:	00 00 
     ce5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     ce9:	31 c0                	xor    %eax,%eax
     ceb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
     cee:	48 63 d0             	movslq %eax,%rdx
     cf1:	48 89 d0             	mov    %rdx,%rax
     cf4:	48 01 c0             	add    %rax,%rax
     cf7:	48 01 d0             	add    %rdx,%rax
     cfa:	48 c1 e0 02          	shl    $0x2,%rax
     cfe:	48 83 c0 08          	add    $0x8,%rax
     d02:	48 89 c1             	mov    %rax,%rcx
     d05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     d09:	ba 00 00 00 00       	mov    $0x0,%edx
     d0e:	48 89 ce             	mov    %rcx,%rsi
     d11:	48 89 c7             	mov    %rax,%rdi
     d14:	e8 c7 fb ff ff       	callq  8e0 <fseek@plt>
     d19:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     d1d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
     d21:	48 89 d1             	mov    %rdx,%rcx
     d24:	ba 01 00 00 00       	mov    $0x1,%edx
     d29:	be 0c 00 00 00       	mov    $0xc,%esi
     d2e:	48 89 c7             	mov    %rax,%rdi
     d31:	e8 3a fb ff ff       	callq  870 <fread@plt>
     d36:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     d3a:	48 89 45 ec          	mov    %rax,-0x14(%rbp)
     d3e:	8b 45 e8             	mov    -0x18(%rbp),%eax
     d41:	89 45 f4             	mov    %eax,-0xc(%rbp)
     d44:	48 8b 45 ec          	mov    -0x14(%rbp),%rax
     d48:	8b 4d f4             	mov    -0xc(%rbp),%ecx
     d4b:	48 89 ca             	mov    %rcx,%rdx
     d4e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
     d52:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
     d59:	00 00 
     d5b:	74 05                	je     d62 <read_node+0x95>
     d5d:	e8 2e fb ff ff       	callq  890 <__stack_chk_fail@plt>
     d62:	c9                   	leaveq 
     d63:	c3                   	retq   

0000000000000d64 <init_tree>:
     d64:	55                   	push   %rbp
     d65:	48 89 e5             	mov    %rsp,%rbp
     d68:	48 83 ec 30          	sub    $0x30,%rsp
     d6c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     d70:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     d77:	00 00 
     d79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     d7d:	31 c0                	xor    %eax,%eax
     d7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     d83:	48 8d 35 da 09 00 00 	lea    0x9da(%rip),%rsi        # 1764 <_IO_stdin_used+0x4>
     d8a:	48 89 c7             	mov    %rax,%rdi
     d8d:	e8 5e fb ff ff       	callq  8f0 <fopen@plt>
     d92:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     d96:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
     d9b:	75 65                	jne    e02 <init_tree+0x9e>
     d9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     da1:	48 8d 35 c0 09 00 00 	lea    0x9c0(%rip),%rsi        # 1768 <_IO_stdin_used+0x8>
     da8:	48 89 c7             	mov    %rax,%rdi
     dab:	e8 40 fb ff ff       	callq  8f0 <fopen@plt>
     db0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     db4:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%rbp)
     dbb:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%rbp)
     dc2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     dc6:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
     dca:	48 89 d1             	mov    %rdx,%rcx
     dcd:	ba 01 00 00 00       	mov    $0x1,%edx
     dd2:	be 08 00 00 00       	mov    $0x8,%esi
     dd7:	48 89 c7             	mov    %rax,%rdi
     dda:	e8 31 fb ff ff       	callq  910 <fwrite@plt>
     ddf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     de3:	48 89 c7             	mov    %rax,%rdi
     de6:	e8 95 fa ff ff       	callq  880 <fclose@plt>
     deb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     def:	48 8d 35 6e 09 00 00 	lea    0x96e(%rip),%rsi        # 1764 <_IO_stdin_used+0x4>
     df6:	48 89 c7             	mov    %rax,%rdi
     df9:	e8 f2 fa ff ff       	callq  8f0 <fopen@plt>
     dfe:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     e02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     e06:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
     e0a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
     e11:	00 00 
     e13:	74 05                	je     e1a <init_tree+0xb6>
     e15:	e8 76 fa ff ff       	callq  890 <__stack_chk_fail@plt>
     e1a:	c9                   	leaveq 
     e1b:	c3                   	retq   

0000000000000e1c <insert_key>:
     e1c:	55                   	push   %rbp
     e1d:	48 89 e5             	mov    %rsp,%rbp
     e20:	48 83 ec 40          	sub    $0x40,%rsp
     e24:	89 7d cc             	mov    %edi,-0x34(%rbp)
     e27:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
     e2b:	8b 45 cc             	mov    -0x34(%rbp),%eax
     e2e:	89 c7                	mov    %eax,%edi
     e30:	e8 fb fd ff ff       	callq  c30 <create_node>
     e35:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     e39:	8b 45 f0             	mov    -0x10(%rbp),%eax
     e3c:	83 e0 00             	and    $0x0,%eax
     e3f:	09 d0                	or     %edx,%eax
     e41:	89 45 f0             	mov    %eax,-0x10(%rbp)
     e44:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     e48:	48 89 c7             	mov    %rax,%rdi
     e4b:	e8 15 fe ff ff       	callq  c65 <read_tree>
     e50:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     e54:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
     e5b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
     e5e:	83 f8 ff             	cmp    $0xffffffff,%eax
     e61:	75 48                	jne    eab <insert_key+0x8f>
     e63:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
     e67:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
     e6b:	8b 55 f0             	mov    -0x10(%rbp),%edx
     e6e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     e72:	48 89 c7             	mov    %rax,%rdi
     e75:	e8 e3 fc ff ff       	callq  b5d <insert_at_free>
     e7a:	89 45 dc             	mov    %eax,-0x24(%rbp)
     e7d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     e81:	48 89 c7             	mov    %rax,%rdi
     e84:	e8 dc fd ff ff       	callq  c65 <read_tree>
     e89:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     e8d:	8b 45 dc             	mov    -0x24(%rbp),%eax
     e90:	89 45 e4             	mov    %eax,-0x1c(%rbp)
     e93:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
     e97:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     e9b:	48 89 d6             	mov    %rdx,%rsi
     e9e:	48 89 c7             	mov    %rax,%rdi
     ea1:	e8 71 fc ff ff       	callq  b17 <write_tree>
     ea6:	e9 21 01 00 00       	jmpq   fcc <insert_key+0x1b0>
     eab:	8b 55 e4             	mov    -0x1c(%rbp),%edx
     eae:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     eb2:	89 d6                	mov    %edx,%esi
     eb4:	48 89 c7             	mov    %rax,%rdi
     eb7:	e8 11 fe ff ff       	callq  ccd <read_node>
     ebc:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
     ec0:	8b 45 fc             	mov    -0x4(%rbp),%eax
     ec3:	83 e0 00             	and    $0x0,%eax
     ec6:	09 d0                	or     %edx,%eax
     ec8:	89 45 fc             	mov    %eax,-0x4(%rbp)
     ecb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
     ece:	89 45 d0             	mov    %eax,-0x30(%rbp)
     ed1:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
     ed8:	e9 e5 00 00 00       	jmpq   fc2 <insert_key+0x1a6>
     edd:	8b 55 e8             	mov    -0x18(%rbp),%edx
     ee0:	8b 45 f4             	mov    -0xc(%rbp),%eax
     ee3:	39 c2                	cmp    %eax,%edx
     ee5:	7d 68                	jge    f4f <insert_key+0x133>
     ee7:	8b 45 f8             	mov    -0x8(%rbp),%eax
     eea:	85 c0                	test   %eax,%eax
     eec:	78 2b                	js     f19 <insert_key+0xfd>
     eee:	8b 45 f8             	mov    -0x8(%rbp),%eax
     ef1:	89 45 d0             	mov    %eax,-0x30(%rbp)
     ef4:	8b 55 f8             	mov    -0x8(%rbp),%edx
     ef7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     efb:	89 d6                	mov    %edx,%esi
     efd:	48 89 c7             	mov    %rax,%rdi
     f00:	e8 c8 fd ff ff       	callq  ccd <read_node>
     f05:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
     f09:	8b 45 fc             	mov    -0x4(%rbp),%eax
     f0c:	83 e0 00             	and    $0x0,%eax
     f0f:	09 d0                	or     %edx,%eax
     f11:	89 45 fc             	mov    %eax,-0x4(%rbp)
     f14:	e9 a9 00 00 00       	jmpq   fc2 <insert_key+0x1a6>
     f19:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
     f1d:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
     f21:	8b 55 f0             	mov    -0x10(%rbp),%edx
     f24:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     f28:	48 89 c7             	mov    %rax,%rdi
     f2b:	e8 2d fc ff ff       	callq  b5d <insert_at_free>
     f30:	89 45 f8             	mov    %eax,-0x8(%rbp)
     f33:	8b 4d d0             	mov    -0x30(%rbp),%ecx
     f36:	48 8b 75 f4          	mov    -0xc(%rbp),%rsi
     f3a:	8b 55 fc             	mov    -0x4(%rbp),%edx
     f3d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     f41:	48 89 c7             	mov    %rax,%rdi
     f44:	e8 f1 fa ff ff       	callq  a3a <write_node>
     f49:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
     f4d:	eb 73                	jmp    fc2 <insert_key+0x1a6>
     f4f:	8b 55 e8             	mov    -0x18(%rbp),%edx
     f52:	8b 45 f4             	mov    -0xc(%rbp),%eax
     f55:	39 c2                	cmp    %eax,%edx
     f57:	7e 65                	jle    fbe <insert_key+0x1a2>
     f59:	8b 45 fc             	mov    -0x4(%rbp),%eax
     f5c:	85 c0                	test   %eax,%eax
     f5e:	78 28                	js     f88 <insert_key+0x16c>
     f60:	8b 45 fc             	mov    -0x4(%rbp),%eax
     f63:	89 45 d0             	mov    %eax,-0x30(%rbp)
     f66:	8b 55 fc             	mov    -0x4(%rbp),%edx
     f69:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     f6d:	89 d6                	mov    %edx,%esi
     f6f:	48 89 c7             	mov    %rax,%rdi
     f72:	e8 56 fd ff ff       	callq  ccd <read_node>
     f77:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
     f7b:	8b 45 fc             	mov    -0x4(%rbp),%eax
     f7e:	83 e0 00             	and    $0x0,%eax
     f81:	09 d0                	or     %edx,%eax
     f83:	89 45 fc             	mov    %eax,-0x4(%rbp)
     f86:	eb 3a                	jmp    fc2 <insert_key+0x1a6>
     f88:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
     f8c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
     f90:	8b 55 f0             	mov    -0x10(%rbp),%edx
     f93:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     f97:	48 89 c7             	mov    %rax,%rdi
     f9a:	e8 be fb ff ff       	callq  b5d <insert_at_free>
     f9f:	89 45 fc             	mov    %eax,-0x4(%rbp)
     fa2:	8b 4d d0             	mov    -0x30(%rbp),%ecx
     fa5:	48 8b 75 f4          	mov    -0xc(%rbp),%rsi
     fa9:	8b 55 fc             	mov    -0x4(%rbp),%edx
     fac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     fb0:	48 89 c7             	mov    %rax,%rdi
     fb3:	e8 82 fa ff ff       	callq  a3a <write_node>
     fb8:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
     fbc:	eb 04                	jmp    fc2 <insert_key+0x1a6>
     fbe:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
     fc2:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
     fc6:	0f 85 11 ff ff ff    	jne    edd <insert_key+0xc1>
     fcc:	90                   	nop
     fcd:	c9                   	leaveq 
     fce:	c3                   	retq   

0000000000000fcf <delete_key>:
     fcf:	55                   	push   %rbp
     fd0:	48 89 e5             	mov    %rsp,%rbp
     fd3:	48 83 ec 60          	sub    $0x60,%rsp
     fd7:	89 7d ac             	mov    %edi,-0x54(%rbp)
     fda:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
     fde:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
     fe2:	48 89 c7             	mov    %rax,%rdi
     fe5:	e8 7b fc ff ff       	callq  c65 <read_tree>
     fea:	48 89 45 d4          	mov    %rax,-0x2c(%rbp)
     fee:	8b 45 d8             	mov    -0x28(%rbp),%eax
     ff1:	83 f8 ff             	cmp    $0xffffffff,%eax
     ff4:	0f 84 e7 02 00 00    	je     12e1 <delete_key+0x312>
     ffa:	8b 55 d8             	mov    -0x28(%rbp),%edx
     ffd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1001:	89 d6                	mov    %edx,%esi
    1003:	48 89 c7             	mov    %rax,%rdi
    1006:	e8 c2 fc ff ff       	callq  ccd <read_node>
    100b:	48 89 45 dc          	mov    %rax,-0x24(%rbp)
    100f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1012:	83 e0 00             	and    $0x0,%eax
    1015:	09 d0                	or     %edx,%eax
    1017:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    101a:	c7 45 bc ff ff ff ff 	movl   $0xffffffff,-0x44(%rbp)
    1021:	8b 45 d8             	mov    -0x28(%rbp),%eax
    1024:	89 45 c0             	mov    %eax,-0x40(%rbp)
    1027:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
    102e:	c7 45 c8 ff ff ff ff 	movl   $0xffffffff,-0x38(%rbp)
    1035:	e9 94 00 00 00       	jmpq   10ce <delete_key+0xff>
    103a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    103d:	39 45 ac             	cmp    %eax,-0x54(%rbp)
    1040:	7d 40                	jge    1082 <delete_key+0xb3>
    1042:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1045:	85 c0                	test   %eax,%eax
    1047:	0f 88 90 02 00 00    	js     12dd <delete_key+0x30e>
    104d:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
    1054:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1057:	89 45 bc             	mov    %eax,-0x44(%rbp)
    105a:	8b 45 e0             	mov    -0x20(%rbp),%eax
    105d:	89 45 c0             	mov    %eax,-0x40(%rbp)
    1060:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1063:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1067:	89 d6                	mov    %edx,%esi
    1069:	48 89 c7             	mov    %rax,%rdi
    106c:	e8 5c fc ff ff       	callq  ccd <read_node>
    1071:	48 89 45 dc          	mov    %rax,-0x24(%rbp)
    1075:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1078:	83 e0 00             	and    $0x0,%eax
    107b:	09 d0                	or     %edx,%eax
    107d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    1080:	eb 4c                	jmp    10ce <delete_key+0xff>
    1082:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1085:	39 45 ac             	cmp    %eax,-0x54(%rbp)
    1088:	7e 40                	jle    10ca <delete_key+0xfb>
    108a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    108d:	85 c0                	test   %eax,%eax
    108f:	0f 88 4b 02 00 00    	js     12e0 <delete_key+0x311>
    1095:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
    109c:	8b 45 c0             	mov    -0x40(%rbp),%eax
    109f:	89 45 bc             	mov    %eax,-0x44(%rbp)
    10a2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    10a5:	89 45 c0             	mov    %eax,-0x40(%rbp)
    10a8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    10ab:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    10af:	89 d6                	mov    %edx,%esi
    10b1:	48 89 c7             	mov    %rax,%rdi
    10b4:	e8 14 fc ff ff       	callq  ccd <read_node>
    10b9:	48 89 45 dc          	mov    %rax,-0x24(%rbp)
    10bd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    10c0:	83 e0 00             	and    $0x0,%eax
    10c3:	09 d0                	or     %edx,%eax
    10c5:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    10c8:	eb 04                	jmp    10ce <delete_key+0xff>
    10ca:	83 6d c4 01          	subl   $0x1,-0x3c(%rbp)
    10ce:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    10d2:	0f 85 62 ff ff ff    	jne    103a <delete_key+0x6b>
    10d8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    10db:	83 f8 ff             	cmp    $0xffffffff,%eax
    10de:	0f 85 83 00 00 00    	jne    1167 <delete_key+0x198>
    10e4:	83 7d bc ff          	cmpl   $0xffffffff,-0x44(%rbp)
    10e8:	75 2e                	jne    1118 <delete_key+0x149>
    10ea:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    10ee:	48 89 c7             	mov    %rax,%rdi
    10f1:	e8 6f fb ff ff       	callq  c65 <read_tree>
    10f6:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
    10fa:	8b 45 e0             	mov    -0x20(%rbp),%eax
    10fd:	89 45 f8             	mov    %eax,-0x8(%rbp)
    1100:	48 8b 55 f4          	mov    -0xc(%rbp),%rdx
    1104:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1108:	48 89 d6             	mov    %rdx,%rsi
    110b:	48 89 c7             	mov    %rax,%rdi
    110e:	e8 04 fa ff ff       	callq  b17 <write_tree>
    1113:	e9 b2 01 00 00       	jmpq   12ca <delete_key+0x2fb>
    1118:	8b 55 bc             	mov    -0x44(%rbp),%edx
    111b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    111f:	89 d6                	mov    %edx,%esi
    1121:	48 89 c7             	mov    %rax,%rdi
    1124:	e8 a4 fb ff ff       	callq  ccd <read_node>
    1129:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
    112d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1130:	83 e0 00             	and    $0x0,%eax
    1133:	09 d0                	or     %edx,%eax
    1135:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1138:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
    113c:	74 08                	je     1146 <delete_key+0x177>
    113e:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1141:	89 45 f8             	mov    %eax,-0x8(%rbp)
    1144:	eb 06                	jmp    114c <delete_key+0x17d>
    1146:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1149:	89 45 fc             	mov    %eax,-0x4(%rbp)
    114c:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    114f:	48 8b 75 f4          	mov    -0xc(%rbp),%rsi
    1153:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1156:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    115a:	48 89 c7             	mov    %rax,%rdi
    115d:	e8 d8 f8 ff ff       	callq  a3a <write_node>
    1162:	e9 63 01 00 00       	jmpq   12ca <delete_key+0x2fb>
    1167:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    116a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    116e:	89 d6                	mov    %edx,%esi
    1170:	48 89 c7             	mov    %rax,%rdi
    1173:	e8 55 fb ff ff       	callq  ccd <read_node>
    1178:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    117c:	8b 45 f0             	mov    -0x10(%rbp),%eax
    117f:	83 e0 00             	and    $0x0,%eax
    1182:	09 d0                	or     %edx,%eax
    1184:	89 45 f0             	mov    %eax,-0x10(%rbp)
    1187:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    118a:	89 45 cc             	mov    %eax,-0x34(%rbp)
    118d:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%rbp)
    1194:	eb 2c                	jmp    11c2 <delete_key+0x1f3>
    1196:	8b 45 cc             	mov    -0x34(%rbp),%eax
    1199:	89 45 d0             	mov    %eax,-0x30(%rbp)
    119c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    119f:	89 45 cc             	mov    %eax,-0x34(%rbp)
    11a2:	8b 55 cc             	mov    -0x34(%rbp),%edx
    11a5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    11a9:	89 d6                	mov    %edx,%esi
    11ab:	48 89 c7             	mov    %rax,%rdi
    11ae:	e8 1a fb ff ff       	callq  ccd <read_node>
    11b3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    11b7:	8b 45 f0             	mov    -0x10(%rbp),%eax
    11ba:	83 e0 00             	and    $0x0,%eax
    11bd:	09 d0                	or     %edx,%eax
    11bf:	89 45 f0             	mov    %eax,-0x10(%rbp)
    11c2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    11c5:	83 f8 ff             	cmp    $0xffffffff,%eax
    11c8:	75 cc                	jne    1196 <delete_key+0x1c7>
    11ca:	83 7d d0 ff          	cmpl   $0xffffffff,-0x30(%rbp)
    11ce:	74 63                	je     1233 <delete_key+0x264>
    11d0:	8b 55 d0             	mov    -0x30(%rbp),%edx
    11d3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    11d7:	89 d6                	mov    %edx,%esi
    11d9:	48 89 c7             	mov    %rax,%rdi
    11dc:	e8 ec fa ff ff       	callq  ccd <read_node>
    11e1:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
    11e5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11e8:	83 e0 00             	and    $0x0,%eax
    11eb:	09 d0                	or     %edx,%eax
    11ed:	89 45 fc             	mov    %eax,-0x4(%rbp)
    11f0:	8b 45 f0             	mov    -0x10(%rbp),%eax
    11f3:	89 45 f8             	mov    %eax,-0x8(%rbp)
    11f6:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    11f9:	48 8b 75 f4          	mov    -0xc(%rbp),%rsi
    11fd:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1200:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1204:	48 89 c7             	mov    %rax,%rdi
    1207:	e8 2e f8 ff ff       	callq  a3a <write_node>
    120c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    120f:	89 45 dc             	mov    %eax,-0x24(%rbp)
    1212:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    1215:	48 8b 75 dc          	mov    -0x24(%rbp),%rsi
    1219:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    121c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1220:	48 89 c7             	mov    %rax,%rdi
    1223:	e8 12 f8 ff ff       	callq  a3a <write_node>
    1228:	8b 45 cc             	mov    -0x34(%rbp),%eax
    122b:	89 45 c0             	mov    %eax,-0x40(%rbp)
    122e:	e9 97 00 00 00       	jmpq   12ca <delete_key+0x2fb>
    1233:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1236:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1239:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    123c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    1240:	8b 55 f0             	mov    -0x10(%rbp),%edx
    1243:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1247:	48 89 c7             	mov    %rax,%rdi
    124a:	e8 eb f7 ff ff       	callq  a3a <write_node>
    124f:	83 7d bc ff          	cmpl   $0xffffffff,-0x44(%rbp)
    1253:	75 2b                	jne    1280 <delete_key+0x2b1>
    1255:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1259:	48 89 c7             	mov    %rax,%rdi
    125c:	e8 04 fa ff ff       	callq  c65 <read_tree>
    1261:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
    1265:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1268:	89 45 f8             	mov    %eax,-0x8(%rbp)
    126b:	48 8b 55 f4          	mov    -0xc(%rbp),%rdx
    126f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1273:	48 89 d6             	mov    %rdx,%rsi
    1276:	48 89 c7             	mov    %rax,%rdi
    1279:	e8 99 f8 ff ff       	callq  b17 <write_tree>
    127e:	eb 4a                	jmp    12ca <delete_key+0x2fb>
    1280:	8b 55 bc             	mov    -0x44(%rbp),%edx
    1283:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1287:	89 d6                	mov    %edx,%esi
    1289:	48 89 c7             	mov    %rax,%rdi
    128c:	e8 3c fa ff ff       	callq  ccd <read_node>
    1291:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
    1295:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1298:	83 e0 00             	and    $0x0,%eax
    129b:	09 d0                	or     %edx,%eax
    129d:	89 45 fc             	mov    %eax,-0x4(%rbp)
    12a0:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
    12a4:	74 08                	je     12ae <delete_key+0x2df>
    12a6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12a9:	89 45 f8             	mov    %eax,-0x8(%rbp)
    12ac:	eb 06                	jmp    12b4 <delete_key+0x2e5>
    12ae:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12b1:	89 45 fc             	mov    %eax,-0x4(%rbp)
    12b4:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    12b7:	48 8b 75 f4          	mov    -0xc(%rbp),%rsi
    12bb:	8b 55 fc             	mov    -0x4(%rbp),%edx
    12be:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    12c2:	48 89 c7             	mov    %rax,%rdi
    12c5:	e8 70 f7 ff ff       	callq  a3a <write_node>
    12ca:	8b 55 c0             	mov    -0x40(%rbp),%edx
    12cd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    12d1:	89 d6                	mov    %edx,%esi
    12d3:	48 89 c7             	mov    %rax,%rdi
    12d6:	e8 c5 f7 ff ff       	callq  aa0 <free_node>
    12db:	eb 04                	jmp    12e1 <delete_key+0x312>
    12dd:	90                   	nop
    12de:	eb 01                	jmp    12e1 <delete_key+0x312>
    12e0:	90                   	nop
    12e1:	c9                   	leaveq 
    12e2:	c3                   	retq   

00000000000012e3 <display_preorder>:
    12e3:	55                   	push   %rbp
    12e4:	48 89 e5             	mov    %rsp,%rbp
    12e7:	48 83 ec 20          	sub    $0x20,%rsp
    12eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    12ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12f3:	48 89 c7             	mov    %rax,%rdi
    12f6:	e8 6a f9 ff ff       	callq  c65 <read_tree>
    12fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    12ff:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1302:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1306:	89 d6                	mov    %edx,%esi
    1308:	48 89 c7             	mov    %rax,%rdi
    130b:	e8 0d 00 00 00       	callq  131d <preorder_rec>
    1310:	bf 0a 00 00 00       	mov    $0xa,%edi
    1315:	e8 36 f5 ff ff       	callq  850 <putchar@plt>
    131a:	90                   	nop
    131b:	c9                   	leaveq 
    131c:	c3                   	retq   

000000000000131d <preorder_rec>:
    131d:	55                   	push   %rbp
    131e:	48 89 e5             	mov    %rsp,%rbp
    1321:	48 83 ec 20          	sub    $0x20,%rsp
    1325:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1329:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    132c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    1330:	78 58                	js     138a <preorder_rec+0x6d>
    1332:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    1335:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1339:	89 d6                	mov    %edx,%esi
    133b:	48 89 c7             	mov    %rax,%rdi
    133e:	e8 8a f9 ff ff       	callq  ccd <read_node>
    1343:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
    1347:	8b 45 fc             	mov    -0x4(%rbp),%eax
    134a:	83 e0 00             	and    $0x0,%eax
    134d:	09 d0                	or     %edx,%eax
    134f:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1352:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1355:	89 c6                	mov    %eax,%esi
    1357:	48 8d 3d 0e 04 00 00 	lea    0x40e(%rip),%rdi        # 176c <_IO_stdin_used+0xc>
    135e:	b8 00 00 00 00       	mov    $0x0,%eax
    1363:	e8 38 f5 ff ff       	callq  8a0 <printf@plt>
    1368:	8b 55 f8             	mov    -0x8(%rbp),%edx
    136b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    136f:	89 d6                	mov    %edx,%esi
    1371:	48 89 c7             	mov    %rax,%rdi
    1374:	e8 a4 ff ff ff       	callq  131d <preorder_rec>
    1379:	8b 55 fc             	mov    -0x4(%rbp),%edx
    137c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1380:	89 d6                	mov    %edx,%esi
    1382:	48 89 c7             	mov    %rax,%rdi
    1385:	e8 93 ff ff ff       	callq  131d <preorder_rec>
    138a:	90                   	nop
    138b:	c9                   	leaveq 
    138c:	c3                   	retq   

000000000000138d <display_inorder>:
    138d:	55                   	push   %rbp
    138e:	48 89 e5             	mov    %rsp,%rbp
    1391:	48 83 ec 20          	sub    $0x20,%rsp
    1395:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1399:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    139d:	48 89 c7             	mov    %rax,%rdi
    13a0:	e8 c0 f8 ff ff       	callq  c65 <read_tree>
    13a5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13a9:	8b 55 fc             	mov    -0x4(%rbp),%edx
    13ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13b0:	89 d6                	mov    %edx,%esi
    13b2:	48 89 c7             	mov    %rax,%rdi
    13b5:	e8 0d 00 00 00       	callq  13c7 <inorder_rec>
    13ba:	bf 0a 00 00 00       	mov    $0xa,%edi
    13bf:	e8 8c f4 ff ff       	callq  850 <putchar@plt>
    13c4:	90                   	nop
    13c5:	c9                   	leaveq 
    13c6:	c3                   	retq   

00000000000013c7 <inorder_rec>:
    13c7:	55                   	push   %rbp
    13c8:	48 89 e5             	mov    %rsp,%rbp
    13cb:	48 83 ec 20          	sub    $0x20,%rsp
    13cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    13d3:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    13d6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    13da:	78 58                	js     1434 <inorder_rec+0x6d>
    13dc:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    13df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13e3:	89 d6                	mov    %edx,%esi
    13e5:	48 89 c7             	mov    %rax,%rdi
    13e8:	e8 e0 f8 ff ff       	callq  ccd <read_node>
    13ed:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
    13f1:	8b 45 fc             	mov    -0x4(%rbp),%eax
    13f4:	83 e0 00             	and    $0x0,%eax
    13f7:	09 d0                	or     %edx,%eax
    13f9:	89 45 fc             	mov    %eax,-0x4(%rbp)
    13fc:	8b 55 f8             	mov    -0x8(%rbp),%edx
    13ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1403:	89 d6                	mov    %edx,%esi
    1405:	48 89 c7             	mov    %rax,%rdi
    1408:	e8 ba ff ff ff       	callq  13c7 <inorder_rec>
    140d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1410:	89 c6                	mov    %eax,%esi
    1412:	48 8d 3d 53 03 00 00 	lea    0x353(%rip),%rdi        # 176c <_IO_stdin_used+0xc>
    1419:	b8 00 00 00 00       	mov    $0x0,%eax
    141e:	e8 7d f4 ff ff       	callq  8a0 <printf@plt>
    1423:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1426:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    142a:	89 d6                	mov    %edx,%esi
    142c:	48 89 c7             	mov    %rax,%rdi
    142f:	e8 93 ff ff ff       	callq  13c7 <inorder_rec>
    1434:	90                   	nop
    1435:	c9                   	leaveq 
    1436:	c3                   	retq   

0000000000001437 <close_tree>:
    1437:	55                   	push   %rbp
    1438:	48 89 e5             	mov    %rsp,%rbp
    143b:	48 83 ec 10          	sub    $0x10,%rsp
    143f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1443:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1448:	74 0c                	je     1456 <close_tree+0x1f>
    144a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    144e:	48 89 c7             	mov    %rax,%rdi
    1451:	e8 2a f4 ff ff       	callq  880 <fclose@plt>
    1456:	90                   	nop
    1457:	c9                   	leaveq 
    1458:	c3                   	retq   

0000000000001459 <main>:
    1459:	55                   	push   %rbp
    145a:	48 89 e5             	mov    %rsp,%rbp
    145d:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    1464:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    146b:	00 00 
    146d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1471:	31 c0                	xor    %eax,%eax
    1473:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    1477:	48 89 c6             	mov    %rax,%rsi
    147a:	48 8d 3d ef 02 00 00 	lea    0x2ef(%rip),%rdi        # 1770 <_IO_stdin_used+0x10>
    1481:	b8 00 00 00 00       	mov    $0x0,%eax
    1486:	e8 75 f4 ff ff       	callq  900 <__isoc99_scanf@plt>
    148b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    148f:	48 89 c7             	mov    %rax,%rdi
    1492:	e8 cd f8 ff ff       	callq  d64 <init_tree>
    1497:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    149b:	c7 45 84 01 00 00 00 	movl   $0x1,-0x7c(%rbp)
    14a2:	e9 da 00 00 00       	jmpq   1581 <main+0x128>
    14a7:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    14ab:	48 89 c6             	mov    %rax,%rsi
    14ae:	48 8d 3d be 02 00 00 	lea    0x2be(%rip),%rdi        # 1773 <_IO_stdin_used+0x13>
    14b5:	b8 00 00 00 00       	mov    $0x0,%eax
    14ba:	e8 41 f4 ff ff       	callq  900 <__isoc99_scanf@plt>
    14bf:	8b 45 80             	mov    -0x80(%rbp),%eax
    14c2:	83 f8 04             	cmp    $0x4,%eax
    14c5:	0f 87 b2 00 00 00    	ja     157d <main+0x124>
    14cb:	89 c0                	mov    %eax,%eax
    14cd:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    14d4:	00 
    14d5:	48 8d 05 a8 02 00 00 	lea    0x2a8(%rip),%rax        # 1784 <_IO_stdin_used+0x24>
    14dc:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    14df:	48 63 d0             	movslq %eax,%rdx
    14e2:	48 8d 05 9b 02 00 00 	lea    0x29b(%rip),%rax        # 1784 <_IO_stdin_used+0x24>
    14e9:	48 01 d0             	add    %rdx,%rax
    14ec:	ff e0                	jmpq   *%rax
    14ee:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    14f2:	48 89 c7             	mov    %rax,%rdi
    14f5:	e8 c4 00 00 00       	callq  15be <display_with_index>
    14fa:	e9 82 00 00 00       	jmpq   1581 <main+0x128>
    14ff:	48 8d 85 7c ff ff ff 	lea    -0x84(%rbp),%rax
    1506:	48 89 c6             	mov    %rax,%rsi
    1509:	48 8d 3d 63 02 00 00 	lea    0x263(%rip),%rdi        # 1773 <_IO_stdin_used+0x13>
    1510:	b8 00 00 00 00       	mov    $0x0,%eax
    1515:	e8 e6 f3 ff ff       	callq  900 <__isoc99_scanf@plt>
    151a:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    1520:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    1524:	48 89 d6             	mov    %rdx,%rsi
    1527:	89 c7                	mov    %eax,%edi
    1529:	e8 ee f8 ff ff       	callq  e1c <insert_key>
    152e:	eb 51                	jmp    1581 <main+0x128>
    1530:	48 8d 85 7c ff ff ff 	lea    -0x84(%rbp),%rax
    1537:	48 89 c6             	mov    %rax,%rsi
    153a:	48 8d 3d 32 02 00 00 	lea    0x232(%rip),%rdi        # 1773 <_IO_stdin_used+0x13>
    1541:	b8 00 00 00 00       	mov    $0x0,%eax
    1546:	e8 b5 f3 ff ff       	callq  900 <__isoc99_scanf@plt>
    154b:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    1551:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    1555:	48 89 d6             	mov    %rdx,%rsi
    1558:	89 c7                	mov    %eax,%edi
    155a:	e8 70 fa ff ff       	callq  fcf <delete_key>
    155f:	eb 20                	jmp    1581 <main+0x128>
    1561:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1565:	48 89 c7             	mov    %rax,%rdi
    1568:	e8 20 fe ff ff       	callq  138d <display_inorder>
    156d:	eb 12                	jmp    1581 <main+0x128>
    156f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1573:	48 89 c7             	mov    %rax,%rdi
    1576:	e8 68 fd ff ff       	callq  12e3 <display_preorder>
    157b:	eb 04                	jmp    1581 <main+0x128>
    157d:	83 6d 84 01          	subl   $0x1,-0x7c(%rbp)
    1581:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
    1585:	0f 85 1c ff ff ff    	jne    14a7 <main+0x4e>
    158b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    158f:	48 89 c7             	mov    %rax,%rdi
    1592:	e8 e9 f2 ff ff       	callq  880 <fclose@plt>
    1597:	48 8d 3d d8 01 00 00 	lea    0x1d8(%rip),%rdi        # 1776 <_IO_stdin_used+0x16>
    159e:	e8 bd f2 ff ff       	callq  860 <puts@plt>
    15a3:	b8 00 00 00 00       	mov    $0x0,%eax
    15a8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    15ac:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    15b3:	00 00 
    15b5:	74 05                	je     15bc <main+0x163>
    15b7:	e8 d4 f2 ff ff       	callq  890 <__stack_chk_fail@plt>
    15bc:	c9                   	leaveq 
    15bd:	c3                   	retq   

00000000000015be <display_with_index>:
    15be:	55                   	push   %rbp
    15bf:	48 89 e5             	mov    %rsp,%rbp
    15c2:	48 83 ec 40          	sub    $0x40,%rsp
    15c6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    15ca:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    15d1:	00 00 
    15d3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    15d7:	31 c0                	xor    %eax,%eax
    15d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    15dd:	ba 00 00 00 00       	mov    $0x0,%edx
    15e2:	be 00 00 00 00       	mov    $0x0,%esi
    15e7:	48 89 c7             	mov    %rax,%rdi
    15ea:	e8 f1 f2 ff ff       	callq  8e0 <fseek@plt>
    15ef:	bf 0c 00 00 00       	mov    $0xc,%edi
    15f4:	e8 d7 f2 ff ff       	callq  8d0 <malloc@plt>
    15f9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    15fd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1601:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    1605:	48 89 d1             	mov    %rdx,%rcx
    1608:	ba 01 00 00 00       	mov    $0x1,%edx
    160d:	be 08 00 00 00       	mov    $0x8,%esi
    1612:	48 89 c7             	mov    %rax,%rdi
    1615:	e8 56 f2 ff ff       	callq  870 <fread@plt>
    161a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    161d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1620:	89 c6                	mov    %eax,%esi
    1622:	48 8d 3d 6f 01 00 00 	lea    0x16f(%rip),%rdi        # 1798 <_IO_stdin_used+0x38>
    1629:	b8 00 00 00 00       	mov    $0x0,%eax
    162e:	e8 6d f2 ff ff       	callq  8a0 <printf@plt>
    1633:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    163a:	eb 5f                	jmp    169b <display_with_index+0xdd>
    163c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1640:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1644:	48 89 d1             	mov    %rdx,%rcx
    1647:	ba 01 00 00 00       	mov    $0x1,%edx
    164c:	be 0c 00 00 00       	mov    $0xc,%esi
    1651:	48 89 c7             	mov    %rax,%rdi
    1654:	e8 17 f2 ff ff       	callq  870 <fread@plt>
    1659:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    165d:	74 27                	je     1686 <display_with_index+0xc8>
    165f:	8b 4d f4             	mov    -0xc(%rbp),%ecx
    1662:	8b 55 f0             	mov    -0x10(%rbp),%edx
    1665:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1668:	8b 75 d4             	mov    -0x2c(%rbp),%esi
    166b:	83 ee 01             	sub    $0x1,%esi
    166e:	41 89 c8             	mov    %ecx,%r8d
    1671:	89 d1                	mov    %edx,%ecx
    1673:	89 c2                	mov    %eax,%edx
    1675:	48 8d 3d 23 01 00 00 	lea    0x123(%rip),%rdi        # 179f <_IO_stdin_used+0x3f>
    167c:	b8 00 00 00 00       	mov    $0x0,%eax
    1681:	e8 1a f2 ff ff       	callq  8a0 <printf@plt>
    1686:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    168a:	48 8b 10             	mov    (%rax),%rdx
    168d:	48 89 55 ec          	mov    %rdx,-0x14(%rbp)
    1691:	8b 40 08             	mov    0x8(%rax),%eax
    1694:	89 45 f4             	mov    %eax,-0xc(%rbp)
    1697:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    169b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    169f:	48 89 c7             	mov    %rax,%rdi
    16a2:	e8 19 f2 ff ff       	callq  8c0 <feof@plt>
    16a7:	85 c0                	test   %eax,%eax
    16a9:	74 91                	je     163c <display_with_index+0x7e>
    16ab:	bf 0a 00 00 00       	mov    $0xa,%edi
    16b0:	e8 9b f1 ff ff       	callq  850 <putchar@plt>
    16b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    16b9:	48 89 c7             	mov    %rax,%rdi
    16bc:	e8 7f f1 ff ff       	callq  840 <free@plt>
    16c1:	90                   	nop
    16c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    16c6:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    16cd:	00 00 
    16cf:	74 05                	je     16d6 <display_with_index+0x118>
    16d1:	e8 ba f1 ff ff       	callq  890 <__stack_chk_fail@plt>
    16d6:	c9                   	leaveq 
    16d7:	c3                   	retq   
    16d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    16df:	00 

00000000000016e0 <__libc_csu_init>:
    16e0:	41 57                	push   %r15
    16e2:	41 56                	push   %r14
    16e4:	49 89 d7             	mov    %rdx,%r15
    16e7:	41 55                	push   %r13
    16e9:	41 54                	push   %r12
    16eb:	4c 8d 25 5e 06 20 00 	lea    0x20065e(%rip),%r12        # 201d50 <__frame_dummy_init_array_entry>
    16f2:	55                   	push   %rbp
    16f3:	48 8d 2d 5e 06 20 00 	lea    0x20065e(%rip),%rbp        # 201d58 <__init_array_end>
    16fa:	53                   	push   %rbx
    16fb:	41 89 fd             	mov    %edi,%r13d
    16fe:	49 89 f6             	mov    %rsi,%r14
    1701:	4c 29 e5             	sub    %r12,%rbp
    1704:	48 83 ec 08          	sub    $0x8,%rsp
    1708:	48 c1 fd 03          	sar    $0x3,%rbp
    170c:	e8 ff f0 ff ff       	callq  810 <_init>
    1711:	48 85 ed             	test   %rbp,%rbp
    1714:	74 20                	je     1736 <__libc_csu_init+0x56>
    1716:	31 db                	xor    %ebx,%ebx
    1718:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    171f:	00 
    1720:	4c 89 fa             	mov    %r15,%rdx
    1723:	4c 89 f6             	mov    %r14,%rsi
    1726:	44 89 ef             	mov    %r13d,%edi
    1729:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    172d:	48 83 c3 01          	add    $0x1,%rbx
    1731:	48 39 dd             	cmp    %rbx,%rbp
    1734:	75 ea                	jne    1720 <__libc_csu_init+0x40>
    1736:	48 83 c4 08          	add    $0x8,%rsp
    173a:	5b                   	pop    %rbx
    173b:	5d                   	pop    %rbp
    173c:	41 5c                	pop    %r12
    173e:	41 5d                	pop    %r13
    1740:	41 5e                	pop    %r14
    1742:	41 5f                	pop    %r15
    1744:	c3                   	retq   
    1745:	90                   	nop
    1746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    174d:	00 00 00 

0000000000001750 <__libc_csu_fini>:
    1750:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000001754 <_fini>:
    1754:	48 83 ec 08          	sub    $0x8,%rsp
    1758:	48 83 c4 08          	add    $0x8,%rsp
    175c:	c3                   	retq   
